1.变量

变量相当于内存中一个数据存储空间的表示，变量相当于一个房间的门牌号，通过门牌号可以找到房间，通过变量名可以访问到变量(值)

变量到底存储到哪里了？ - -对应一个符号表 符号与内存一一映射

变量使用必须先声明 后使用

变量的数据值可以在同一类型范围内不断变化

变量在同一作用域不能使用重复的变量名

变量 = 数据类型 + 数值 + 变量名

2.程序中+的作用

相加内容中存在字符串 那么则是字符串的追加 拼接运算

若无字符串 全为数值 则当做正常的 + 使用 加法运算

计算机 + 运算时从左向右

3.数据类型

基本数据类型

byte（1字节） char （2字节）  short  int long 

float double boolean(布尔1字节 false true) 

引用数据类型

class 类 interface 接口 数组[]

4.数据类型的注意事项

计算机中的整型数字默认为int型 的常量 若定义long型 则在数字后加l/L表示类型的声明

计算机中的浮点数子默认类型为double型 若定义float型 则在数字后面加上f/F表示类型的声明

浮点数在计算机中的组成 符号位+指数位+尾数位 尾数部分可能会丢失，造成精度损失

小数都是近似值 计算机对小数的计算结果也可能是近似值（这是一个浮点数的使用陷阱）

科学计数法 E/e 后接上整数表示乘于10的次方 c好像是先数后e？

5.java API 文档

java 版本 ——包——接口，类和，异常  类后有字段（ 成员变量 成员属性），构造器（构造方法） 成员方法（方法）

javaAPI文档是用来查基础类的，可以用于学习和了解类的使用方法和作用



6.sublime 的快捷键及设置

ctrl+f快捷键搜索 搜索后修改及完成

ctrl + d 拷贝当前行到下一行

ctrl + k 删除当前行

ctrl + / 注释选中注释



7.字符型数据和编码表的关系

字符型数据的本质是二进制数字 特殊字符如转义字符\t为一个字符

计算机存储过程 ： ‘a’->97->二进制 ->存储

计算机读取过程： 存储 -> 二进制-> 97->‘a’

字符和码值的对应关系是通过字符编码表决定的

*下面介绍一下字符编码表
 
ASCILL(ascii编码表，字母或符号为一个字节，一共128个，最早使用)

Unicode（Unicode编码表，固定大小的编码，字母和汉字统一使用两个字节表示，比较浪费空间）

UTF-8(大小可变的编码表，字母用一个字节，汉字用三个字节，相当于Unicode的改进)（utf-8可根据用1~6字节表示符号，根据不同的符号变化字节长度

最灵活,使用最广）

gbk(大小可变的编码表，字母一个字节，汉字两个字节)

gb2312（可以表示汉字 gb2312<gbk<Utf-8）

big5(表示繁体中文，香港澳门使用)



8.基本数据类型的转换

当java程序在进行赋值或运算时 ，精度小的类型自动转换成精度大的数据类型，叫做自动数据类型转换

数据类型按精度（容量）大小进行排序图为

byte - short |                                    Boolean(不参与转换)

    char -     int - long - float - double

各种类型的数据混合计算时，系统首先自动将所有数据转换成容量最大的数据类型，再进行计算

当把精度小的数据赋值给精度大的数据类型时，会报错，反之则会自动转换（必须按照排序图才能进行转换）

（byte，short）和 char之间不会相互自动转换

 byte short char 类型之间可以进行运算 运算时自动转换成int类型

自动提升原则 表达式结果的类型自动提升为操作数中最大精度的类型



9.强制数据类型转换

将容量大的数据类型转换成数据小的数据类型

强转符号只对最近的操作数有效

char类型可以保存int的常量值 但不能保存int的变量值

也就是可以用数字直接给short char赋值 常量值自动转换成对应的类型

byte char short 型数据进行运算时 会自动转换成int类型


10.基本数据类型和String类型的转换

基本数据类型的转换成字符串方法 基本数据类型+ “”；

字符串转换成基本数据类型的方法 使用基本数据类型的包装类相应的方法，得到基本数据类型

如 
Byte.parseByte();
Boolean.parseBoolean();
Short.parseShort();
Long.parseLong();
Integer.parseInt();
Float.parseFloat();
Double.parseDouble(); 注意 无char

将字符串转换成字符则使用.charAT()取出字符的方法

字符串转换时要注意格式是否正确，否则会出现转换错误 编译不出错 运行出错



